<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <!-- HTTP security configurations -->
    <http auto-config="true" use-expressions="true">
        <form-login login-processing-url="/resources/j_spring_security_check" login-page="/login" authentication-failure-url="/login?login_error=t" />
        <logout logout-url="/resources/j_spring_security_logout" />
        <!-- Configure these elements to secure URIs in your application -->
        <intercept-url pattern="/choices/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/member/**" access="isAuthenticated()" />
        <intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/security/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/**" access="permitAll" />
    </http>

	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<beans:constructor-arg value="1tBro4DbanD" />
	</beans:bean>

	<!-- Configure Authentication mechanism -->
	<authentication-manager alias="authenticationManager">
		<!-- First way -->
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />

			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="
                    SELECT name AS username, hashed_password AS password, enabled 
                    FROM users WHERE name = ? "

				authorities-by-username-query="
                    SELECT u.name AS username, r.name AS authority 
                    FROM users u, roles r, users_roles ur 
                    WHERE u.id = ur.user_id 
                        AND r.id = ur.role_id 
                        AND u.name = ? "
			/>
        </authentication-provider>
	
		<!-- Another way if previous way is failed -->
		<authentication-provider>
			<password-encoder hash="sha-256" />

			<!-- SHA-256 values can be produced using 'echo -n your_desired_password | sha256sum' (using normal *nix environments) -->
            <user-service>
              	<user name="admin" password="8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918" authorities="ROLE_ADMIN" />
            </user-service>
        </authentication-provider>

    </authentication-manager>

	<!-- Security event logging -->
	<beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener" />

</beans:beans>
